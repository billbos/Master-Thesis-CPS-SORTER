trainingSetDirectory <- "./documents/1-use_cases"
TestSetDirectory <- "./documents/4-class_description"
# creating folders with pre-processed documents (e.g., camel case splitting, etc.)
trainingSetDirectory_preprocessed <- "./documents-preprocessed/trainingSetDirectory"
TestSetDirectory_preprocessed <- "./documents-preprocessed/TestSetDirectory"
list.dirs(trainingSetDirectory)
trainingSetDirectory
# @author sebastiano panichella
#install packages if not installed yet
if (!require(tm)){ install.packages("tm") }
if (!require(stringr)){ install.packages("stringr") }
if (!require(stopwords)){ install.packages("stopwords") }
if (!require(slam)){ install.packages("slam") }
if (!require(snakecase)){ install.packages("snakecase") }
if (!require(data.table)){ install.packages("data.table") }
if (!require(XML)){ install.packages("XML") }
#load the libraries...
library(tm)
library(stringr)
library(stopwords)
library(slam)
base_folder <- setwd("~/Desktop/Zurich-applied-Science/Collaborations/Marcela/eclipse/workspace/Weka-project/R-resources/")
source("./R-scripts/utilities.R")
#path software artifacts
trainingSetDirectory <- "./R-scripts/documents/1-use_cases"
TestSetDirectory <- "./R-scripts/documents/4-class_description"
# creating folders with pre-processed documents (e.g., camel case splitting, etc.)
trainingSetDirectory_preprocessed <- "./R-scripts/documents-preprocessed/trainingSetDirectory"
TestSetDirectory_preprocessed <- "./R-scripts/documents-preprocessed/TestSetDirectory"
# we preprocess files
#pre_processing(trainingSetDirectory, trainingSetDirectory_preprocessed, ".txt")
#pre_processing(TestSetDirectory, TestSetDirectory_preprocessed, ".txt")
pre_processing(trainingSetDirectory, trainingSetDirectory_preprocessed)
pre_processing(TestSetDirectory, TestSetDirectory_preprocessed)
# directories to parse
directories <- c(trainingSetDirectory_preprocessed, TestSetDirectory_preprocessed)
# the following command index the software artifacts
# and store this data in "tm"
tdm <- build_tm_matrix(directories)
lis.dir(trainingSetDirectory)
list.dir(trainingSetDirectory)
list.dirs(trainingSetDirectory)
# @author sebastiano panichella
#install packages if not installed yet
if (!require(tm)){ install.packages("tm") }
if (!require(stringr)){ install.packages("stringr") }
if (!require(stopwords)){ install.packages("stopwords") }
if (!require(slam)){ install.packages("slam") }
if (!require(snakecase)){ install.packages("snakecase") }
if (!require(data.table)){ install.packages("data.table") }
if (!require(XML)){ install.packages("XML") }
#load the libraries...
library(tm)
library(stringr)
library(stopwords)
library(slam)
base_folder <- setwd("~/Desktop/Zurich-applied-Science/Collaborations/Marcela/eclipse/workspace/Weka-project/R-resources/")
source("./R-scripts/utilities.R")
#path software artifacts
trainingSetDirectory <- "./R-scripts/documents/1-use_cases"
TestSetDirectory <- "./R-scripts/documents/4-class_description"
# creating folders with pre-processed documents (e.g., camel case splitting, etc.)
trainingSetDirectory_preprocessed <- "./R-scripts/documents-preprocessed/trainingSetDirectory"
TestSetDirectory_preprocessed <- "./R-scripts/documents-preprocessed/TestSetDirectory"
# we preprocess files
#pre_processing(trainingSetDirectory, trainingSetDirectory_preprocessed, ".txt")
#pre_processing(TestSetDirectory, TestSetDirectory_preprocessed, ".txt")
pre_processing(trainingSetDirectory, trainingSetDirectory_preprocessed)
pre_processing(TestSetDirectory, TestSetDirectory_preprocessed)
# @author sebastiano panichella
#install packages if not installed yet
if (!require(tm)){ install.packages("tm") }
if (!require(stringr)){ install.packages("stringr") }
if (!require(stopwords)){ install.packages("stopwords") }
if (!require(slam)){ install.packages("slam") }
if (!require(snakecase)){ install.packages("snakecase") }
if (!require(data.table)){ install.packages("data.table") }
if (!require(XML)){ install.packages("XML") }
#load the libraries...
library(tm)
library(stringr)
library(stopwords)
library(slam)
base_folder <- setwd("~/Desktop/Zurich-applied-Science/Collaborations/Marcela/eclipse/workspace/Weka-project/R-resources/")
source("./R-scripts/utilities.R")
#path software artifacts
trainingSetDirectory <- "./R-scripts/documents/1-use_cases"
TestSetDirectory <- "./R-scripts/documents/4-class_description"
# creating folders with pre-processed documents (e.g., camel case splitting, etc.)
trainingSetDirectory_preprocessed <- "./R-scripts/documents-preprocessed/trainingSetDirectory"
TestSetDirectory_preprocessed <- "./R-scripts/documents-preprocessed/TestSetDirectory"
# we preprocess files
#pre_processing(trainingSetDirectory, trainingSetDirectory_preprocessed, ".txt")
#pre_processing(TestSetDirectory, TestSetDirectory_preprocessed, ".txt")
pre_processing(trainingSetDirectory, trainingSetDirectory_preprocessed)
pre_processing(TestSetDirectory, TestSetDirectory_preprocessed)
# @author sebastiano panichella
#install packages if not installed yet
if (!require(tm)){ install.packages("tm") }
if (!require(stringr)){ install.packages("stringr") }
if (!require(stopwords)){ install.packages("stopwords") }
if (!require(slam)){ install.packages("slam") }
if (!require(snakecase)){ install.packages("snakecase") }
if (!require(data.table)){ install.packages("data.table") }
if (!require(XML)){ install.packages("XML") }
#load the libraries...
library(tm)
library(stringr)
library(stopwords)
library(slam)
base_folder <- setwd("~/Desktop/Zurich-applied-Science/Collaborations/Marcela/eclipse/workspace/Weka-project/R-resources/")
source("./R-scripts/utilities.R")
#path software artifacts
trainingSetDirectory <- "./R-scripts/documents/1-use_cases"
TestSetDirectory <- "./R-scripts/documents/4-class_description"
# creating folders with pre-processed documents (e.g., camel case splitting, etc.)
trainingSetDirectory_preprocessed <- "./R-scripts/documents-preprocessed/trainingSetDirectory"
TestSetDirectory_preprocessed <- "./R-scripts/documents-preprocessed/TestSetDirectory"
# we preprocess files
#pre_processing(trainingSetDirectory, trainingSetDirectory_preprocessed, ".txt")
#pre_processing(TestSetDirectory, TestSetDirectory_preprocessed, ".txt")
pre_processing(trainingSetDirectory, trainingSetDirectory_preprocessed)
input<- trainingSetDirectory
output<- trainingSetDirectory_preprocessed
files <- list.files(input, recursive=TRUE)
files
dir.create(output, showWarnings = FALSE)
files <- list.files(input, recursive=TRUE)
dir.create(output, showWarnings = FALSE)
for (document in files){
#if (endsWith(document, format)){
print(document)
text <- scan(paste(input, document, sep="/"), what = character())
text <- to_sentence_case(text)
#text <- gsub("[[:punct:]]", " ", text)
#text <- gsub("username", "user name", text)
#new_file <- extract_file_name(document)
write.table(text, paste(output, document, sep="/"), row.names = FALSE, col.names = FALSE)
#}
}
files <- list.files(input, recursive=TRUE)
dir.create(output, showWarnings = FALSE,recursive = TRUE)
for (document in files){
#if (endsWith(document, format)){
print(document)
text <- scan(paste(input, document, sep="/"), what = character())
text <- to_sentence_case(text)
#text <- gsub("[[:punct:]]", " ", text)
#text <- gsub("username", "user name", text)
#new_file <- extract_file_name(document)
write.table(text, paste(output, document, sep="/"), row.names = FALSE, col.names = FALSE)
#}
}
# @author sebastiano panichella
#install packages if not installed yet
if (!require(tm)){ install.packages("tm") }
if (!require(stringr)){ install.packages("stringr") }
if (!require(stopwords)){ install.packages("stopwords") }
if (!require(slam)){ install.packages("slam") }
if (!require(snakecase)){ install.packages("snakecase") }
if (!require(data.table)){ install.packages("data.table") }
if (!require(XML)){ install.packages("XML") }
#load the libraries...
library(tm)
library(stringr)
library(stopwords)
library(slam)
base_folder <- setwd("~/Desktop/Zurich-applied-Science/Collaborations/Marcela/eclipse/workspace/Weka-project/R-resources/")
source("./R-scripts/utilities.R")
#path software artifacts
trainingSetDirectory <- "./R-scripts/documents/1-use_cases"
TestSetDirectory <- "./R-scripts/documents/4-class_description"
# creating folders with pre-processed documents (e.g., camel case splitting, etc.)
trainingSetDirectory_preprocessed <- "./R-scripts/documents-preprocessed/trainingSetDirectory"
TestSetDirectory_preprocessed <- "./R-scripts/documents-preprocessed/TestSetDirectory"
# we preprocess files
#pre_processing(trainingSetDirectory, trainingSetDirectory_preprocessed, ".txt")
#pre_processing(TestSetDirectory, TestSetDirectory_preprocessed, ".txt")
pre_processing(trainingSetDirectory, trainingSetDirectory_preprocessed)
input
output
files <- list.files(input, recursive=TRUE)
dir.create(output, showWarnings = FALSE, recursive = TRUE)
files
files <- list.files(input, recursive=TRUE)
dir.create(output, showWarnings = FALSE, recursive = TRUE)
for (document in files){
#if (endsWith(document, format)){
print(document)
text <- scan(paste(input, document, sep="/"), what = character())
text <- to_sentence_case(text)
#text <- gsub("[[:punct:]]", " ", text)
#text <- gsub("username", "user name", text)
#new_file <- extract_file_name(document)
write.table(text, paste(output, document, sep="/"), row.names = FALSE, col.names = FALSE)
#}
}
#text <- gsub("[[:punct:]]", " ", text)
#text <- gsub("username", "user name", text)
#new_file <- extract_file_name(document)
write.table(text, paste(output, document, sep="/"), row.names = FALSE, col.names = FALSE)
text <- scan(paste(input, document, sep="/"), what = character())
paste(input, document, sep="/")
text <- scan(paste(input, document, sep="/"), what = character())
paste(input, document, sep="/")
text <- scan(paste(input, document, sep="/"), what = character(), showWarnings = FALSE)
document
files
text <- scan(paste(input, "8.txt" , sep="/"), what = character())
text <- scan(paste(input, "7.txt" , sep="/"), what = character())
text
text <- to_sentence_case(text)
text
con <- file(paste(input, document, sep="/"), "r")
text<- readLines(con) # empty
close(con)
#text <- scan(paste(input, document, sep="/"), what = character())
con <- file(paste(input, document, sep="/"), "r",showWarnings = FALSE)
con <- file(paste(input, document, sep="/"), "r")
text<- readLines(con) # empty
close(con)
text
text <- to_sentence_case(text)
text
#text <- gsub("[[:punct:]]", " ", text)
#text <- gsub("username", "user name", text)
#new_file <- extract_file_name(document)
write.table(text, paste(output, document, sep="/"), row.names = FALSE, col.names = FALSE)
# @author sebastiano panichella
#install packages if not installed yet
if (!require(tm)){ install.packages("tm") }
if (!require(stringr)){ install.packages("stringr") }
if (!require(stopwords)){ install.packages("stopwords") }
if (!require(slam)){ install.packages("slam") }
if (!require(snakecase)){ install.packages("snakecase") }
if (!require(data.table)){ install.packages("data.table") }
if (!require(XML)){ install.packages("XML") }
#load the libraries...
library(tm)
library(stringr)
library(stopwords)
library(slam)
base_folder <- setwd("~/Desktop/Zurich-applied-Science/Collaborations/Marcela/eclipse/workspace/Weka-project/R-resources/")
source("./R-scripts/utilities.R")
#path software artifacts
trainingSetDirectory <- "./R-scripts/documents/1-use_cases"
TestSetDirectory <- "./R-scripts/documents/4-class_description"
# creating folders with pre-processed documents (e.g., camel case splitting, etc.)
trainingSetDirectory_preprocessed <- "./R-scripts/documents-preprocessed/trainingSetDirectory"
TestSetDirectory_preprocessed <- "./R-scripts/documents-preprocessed/TestSetDirectory"
# we preprocess files
#pre_processing(trainingSetDirectory, trainingSetDirectory_preprocessed, ".txt")
#pre_processing(TestSetDirectory, TestSetDirectory_preprocessed, ".txt")
pre_processing(trainingSetDirectory, trainingSetDirectory_preprocessed)
# @author sebastiano panichella
#install packages if not installed yet
if (!require(tm)){ install.packages("tm") }
if (!require(stringr)){ install.packages("stringr") }
if (!require(stopwords)){ install.packages("stopwords") }
if (!require(slam)){ install.packages("slam") }
if (!require(snakecase)){ install.packages("snakecase") }
if (!require(data.table)){ install.packages("data.table") }
if (!require(XML)){ install.packages("XML") }
#load the libraries...
library(tm)
library(stringr)
library(stopwords)
library(slam)
base_folder <- setwd("~/Desktop/Zurich-applied-Science/Collaborations/Marcela/eclipse/workspace/Weka-project/R-resources/")
source("./R-scripts/utilities.R")
#path software artifacts
trainingSetDirectory <- "./R-scripts/documents/1-use_cases"
TestSetDirectory <- "./R-scripts/documents/4-class_description"
# creating folders with pre-processed documents (e.g., camel case splitting, etc.)
trainingSetDirectory_preprocessed <- "./R-scripts/documents-preprocessed/trainingSetDirectory"
TestSetDirectory_preprocessed <- "./R-scripts/documents-preprocessed/TestSetDirectory"
# we preprocess files
#pre_processing(trainingSetDirectory, trainingSetDirectory_preprocessed, ".txt")
#pre_processing(TestSetDirectory, TestSetDirectory_preprocessed, ".txt")
pre_processing(trainingSetDirectory, trainingSetDirectory_preprocessed)
pre_processing(TestSetDirectory, TestSetDirectory_preprocessed)
# directories to parse
directories <- c(trainingSetDirectory_preprocessed, TestSetDirectory_preprocessed)
# the following command index the software artifacts
# and store this data in "tm"
tdm <- build_tm_matrix(directories)
# @author sebastiano panichella
#install packages if not installed yet
if (!require(tm)){ install.packages("tm") }
if (!require(stringr)){ install.packages("stringr") }
if (!require(stopwords)){ install.packages("stopwords") }
if (!require(slam)){ install.packages("slam") }
if (!require(snakecase)){ install.packages("snakecase") }
if (!require(data.table)){ install.packages("data.table") }
if (!require(XML)){ install.packages("XML") }
#load the libraries...
library(tm)
library(stringr)
library(stopwords)
library(slam)
base_folder <- setwd("~/Desktop/Zurich-applied-Science/Collaborations/Marcela/eclipse/workspace/Weka-project/R-resources/")
source("./R-scripts/utilities.R")
#path software artifacts
trainingSetDirectory <- "./R-scripts/documents/1-use_cases"
TestSetDirectory <- "./R-scripts/documents/4-class_description"
# creating folders with pre-processed documents (e.g., camel case splitting, etc.)
trainingSetDirectory_preprocessed <- "./R-scripts/documents-preprocessed/trainingSetDirectory"
TestSetDirectory_preprocessed <- "./R-scripts/documents-preprocessed/TestSetDirectory"
# we preprocess files
#pre_processing(trainingSetDirectory, trainingSetDirectory_preprocessed, ".txt")
#pre_processing(TestSetDirectory, TestSetDirectory_preprocessed, ".txt")
pre_processing(trainingSetDirectory, trainingSetDirectory_preprocessed)
pre_processing(TestSetDirectory, TestSetDirectory_preprocessed)
# directories to parse
directories <- c(trainingSetDirectory_preprocessed, TestSetDirectory_preprocessed)
# the following command index the software artifacts
# and store this data in "tm"
tdm <- build_tm_matrix(directories)
# extract only the interesting part of the matrix
source_files <- list.files(trainingSetDirectory_preprocessed, recursive=TRUE)
target_files <- list.files(TestSetDirectory_preprocessed, recursive=TRUE)
target_files
source_files
TestSet_files <- list.files(trainingSetDirectory_preprocessed, recursive=TRUE)
TestSet_files <- list.files(TestSetDirectory_preprocessed, recursive=TRUE)
TestSet_files
tdm
tdm_full <- as.matrix(tdm)
tdm_full
tdm_full<- t(tdm_full)
tdm_full
# @author sebastiano panichella
#install packages if not installed yet
if (!require(tm)){ install.packages("tm") }
if (!require(stringr)){ install.packages("stringr") }
if (!require(stopwords)){ install.packages("stopwords") }
if (!require(slam)){ install.packages("slam") }
if (!require(snakecase)){ install.packages("snakecase") }
if (!require(data.table)){ install.packages("data.table") }
if (!require(XML)){ install.packages("XML") }
#load the libraries...
library(tm)
library(stringr)
library(stopwords)
library(slam)
base_folder <- setwd("~/Desktop/Zurich-applied-Science/Collaborations/Marcela/eclipse/workspace/Weka-project/R-resources/")
source("./R-scripts/utilities.R")
#path software artifacts
trainingSetDirectory <- "./R-scripts/documents/1-use_cases"
TestSetDirectory <- "./R-scripts/documents/4-class_description"
# creating folders with pre-processed documents (e.g., camel case splitting, etc.)
trainingSetDirectory_preprocessed <- "./R-scripts/documents-preprocessed/trainingSetDirectory"
TestSetDirectory_preprocessed <- "./R-scripts/documents-preprocessed/TestSetDirectory"
# we preprocess files
#pre_processing(trainingSetDirectory, trainingSetDirectory_preprocessed, ".txt")
#pre_processing(TestSetDirectory, TestSetDirectory_preprocessed, ".txt")
pre_processing(trainingSetDirectory, trainingSetDirectory_preprocessed)
pre_processing(TestSetDirectory, TestSetDirectory_preprocessed)
# directories to parse
directories <- c(trainingSetDirectory_preprocessed, TestSetDirectory_preprocessed)
# the following command index the software artifacts
# and store this data in "tm" (it is a sparse matrix)
tdm <- build_tm_matrix(directories)
# extract only the interesting part of the matrix
Training_files <- list.files(trainingSetDirectory_preprocessed, recursive=TRUE)
TestSet_files <- list.files(TestSetDirectory_preprocessed, recursive=TRUE)
tdm_full <- as.matrix(tdm)
tdm_full<- t(tdm_full)
Training_files
tdm_full
tdm_full_trainingSet <- tdm_full[Training_files,]
tdm_full_testSet <- tdm_full[TestSet_files,]
tdm_full_trainingSet
tdm_full_testSet
args <- commandArgs(trailingOnly = TRUE)
base_folder2 <- args[1]
base_folder2
args <- commandArgs(trailingOnly = TRUE)
base_folder2 <- args[1]
# @author sebastiano panichella
#install packages if not installed yet
if (!require(tm)){ install.packages("tm") }
if (!require(stringr)){ install.packages("stringr") }
if (!require(stopwords)){ install.packages("stopwords") }
if (!require(slam)){ install.packages("slam") }
if (!require(snakecase)){ install.packages("snakecase") }
if (!require(data.table)){ install.packages("data.table") }
if (!require(XML)){ install.packages("XML") }
#load the libraries...
library(tm)
library(stringr)
library(stopwords)
library(slam)
base_folder <- setwd("~/Desktop/Zurich-applied-Science/Collaborations/Marcela/eclipse/workspace/Weka-project/R-resources/")
if(!is.na(base_folder2))
{
base_folder<- base_folder2
}
base_folder
base_folder2
args <- commandArgs(trailingOnly = TRUE)
base_folder2 <- args[1]
# @author sebastiano panichella
#install packages if not installed yet
if (!require(tm)){ install.packages("tm") }
if (!require(stringr)){ install.packages("stringr") }
if (!require(stopwords)){ install.packages("stopwords") }
if (!require(slam)){ install.packages("slam") }
if (!require(snakecase)){ install.packages("snakecase") }
if (!require(data.table)){ install.packages("data.table") }
if (!require(XML)){ install.packages("XML") }
#load the libraries...
library(tm)
library(stringr)
library(stopwords)
library(slam)
base_folder <- "~/Desktop/Zurich-applied-Science/Collaborations/Marcela/eclipse/workspace/Weka-project/R-resources/"
if(!is.na(base_folder2))
{
base_folder<- base_folder2
}
setwd(base_folder)
source("./R-scripts/utilities.R")
#path software artifacts
trainingSetDirectory <- "./R-scripts/documents/1-use_cases"
TestSetDirectory <- "./R-scripts/documents/4-class_description"
# creating folders with pre-processed documents (e.g., camel case splitting, etc.)
trainingSetDirectory_preprocessed <- "./R-scripts/documents-preprocessed/trainingSetDirectory"
TestSetDirectory_preprocessed <- "./R-scripts/documents-preprocessed/TestSetDirectory"
# we preprocess files
#pre_processing(trainingSetDirectory, trainingSetDirectory_preprocessed, ".txt")
#pre_processing(TestSetDirectory, TestSetDirectory_preprocessed, ".txt")
pre_processing(trainingSetDirectory, trainingSetDirectory_preprocessed)
pre_processing(TestSetDirectory, TestSetDirectory_preprocessed)
base_folder2
args <- commandArgs(trailingOnly = TRUE)
base_folder2 <- args[1]
# @author sebastiano panichella
#install packages if not installed yet
if (!require(tm)){ install.packages("tm") }
if (!require(stringr)){ install.packages("stringr") }
if (!require(stopwords)){ install.packages("stopwords") }
if (!require(slam)){ install.packages("slam") }
if (!require(snakecase)){ install.packages("snakecase") }
if (!require(data.table)){ install.packages("data.table") }
if (!require(XML)){ install.packages("XML") }
#load the libraries...
library(tm)
library(stringr)
library(stopwords)
library(slam)
base_folder <- "~/Desktop/Zurich-applied-Science/Collaborations/Marcela/eclipse/workspace/Weka-project/R-resources/R-scripts/"
if(!is.na(base_folder2))
{
base_folder<- base_folder2
}
setwd(base_folder)
source("./utilities.R")
#path software artifacts
trainingSetDirectory <- "./documents/1-use_cases"
TestSetDirectory <- "./documents/4-class_description"
# creating folders with pre-processed documents (e.g., camel case splitting, etc.)
trainingSetDirectory_preprocessed <- "./documents-preprocessed/trainingSetDirectory"
TestSetDirectory_preprocessed <- "./documents-preprocessed/TestSetDirectory"
# we preprocess files
#pre_processing(trainingSetDirectory, trainingSetDirectory_preprocessed, ".txt")
#pre_processing(TestSetDirectory, TestSetDirectory_preprocessed, ".txt")
pre_processing(trainingSetDirectory, trainingSetDirectory_preprocessed)
pre_processing(TestSetDirectory, TestSetDirectory_preprocessed)
args <- commandArgs(trailingOnly = TRUE)
base_folder2 <- args[1]
# @author sebastiano panichella
#install packages if not installed yet
if (!require(tm)){ install.packages("tm") }
if (!require(stringr)){ install.packages("stringr") }
if (!require(stopwords)){ install.packages("stopwords") }
if (!require(slam)){ install.packages("slam") }
if (!require(snakecase)){ install.packages("snakecase") }
if (!require(data.table)){ install.packages("data.table") }
if (!require(XML)){ install.packages("XML") }
#load the libraries...
library(tm)
library(stringr)
library(stopwords)
library(slam)
base_folder <- "~/Desktop/Zurich-applied-Science/Collaborations/Marcela/eclipse/workspace/Weka-project/R-resources/R-scripts/"
if(!is.na(base_folder2))
{
base_folder<- base_folder2
}
setwd(base_folder)
source("./utilities.R")
#path software artifacts
trainingSetDirectory <- "./documents/1-use_cases"
TestSetDirectory <- "./documents/4-class_description"
# creating folders with pre-processed documents (e.g., camel case splitting, etc.)
trainingSetDirectory_preprocessed <- "./documents-preprocessed/trainingSetDirectory"
TestSetDirectory_preprocessed <- "./documents-preprocessed/TestSetDirectory"
# we preprocess files
#pre_processing(trainingSetDirectory, trainingSetDirectory_preprocessed, ".txt")
#pre_processing(TestSetDirectory, TestSetDirectory_preprocessed, ".txt")
pre_processing(trainingSetDirectory, trainingSetDirectory_preprocessed)
pre_processing(TestSetDirectory, TestSetDirectory_preprocessed)
# directories to parse
directories <- c(trainingSetDirectory_preprocessed, TestSetDirectory_preprocessed)
directories
# the following command index the software artifacts
# and store this data in "tm" (it is a sparse matrix)
tdm <- build_tm_matrix(directories)
# extract only the interesting part of the matrix
Training_files <- list.files(trainingSetDirectory, recursive=TRUE)
TestSet_files <- list.files(TestSetDirectory, recursive=TRUE)
